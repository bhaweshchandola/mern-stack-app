[{"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\index.js":"1","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reportWebVitals.js":"2","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\App.js":"3","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\index.js":"4","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\Nav.js":"5","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\PostForm.js":"6","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\HomePage.js":"7","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\Fortnite.js":"8","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\FortniteItem.js":"9","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\counter.js":"10","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\islogged.js":"11","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\PostList.js":"12","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\actions\\index.js":"13","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\PostFormF.js":"14","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\users.js":"15","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\FormValidations.js":"16","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\formdata.js":"17","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\LazyComponent.js":"18","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\Hero.js":"19","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\CheckHero.js":"20","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\ErrorBoundary.js":"21"},{"size":901,"mtime":1610190891267,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1610190891269,"results":"24","hashOfConfig":"23"},{"size":1351,"mtime":1612607963746,"results":"25","hashOfConfig":"23"},{"size":381,"mtime":1612464672178,"results":"26","hashOfConfig":"23"},{"size":2507,"mtime":1612607967639,"results":"27","hashOfConfig":"23"},{"size":3443,"mtime":1610211090714,"results":"28","hashOfConfig":"23"},{"size":1207,"mtime":1612464443311,"results":"29","hashOfConfig":"23"},{"size":1796,"mtime":1610190891263,"results":"30","hashOfConfig":"23"},{"size":1479,"mtime":1610190891264,"results":"31","hashOfConfig":"23"},{"size":281,"mtime":1610190891268,"results":"32","hashOfConfig":"23"},{"size":215,"mtime":1610190891268,"results":"33","hashOfConfig":"23"},{"size":1574,"mtime":1610190891266,"results":"34","hashOfConfig":"23"},{"size":195,"mtime":1612463973391,"results":"35","hashOfConfig":"23"},{"size":3554,"mtime":1610225037098,"results":"36","hashOfConfig":"23"},{"size":312,"mtime":1612463374467,"results":"37","hashOfConfig":"23"},{"size":2967,"mtime":1612554564854,"results":"38","hashOfConfig":"23"},{"size":375,"mtime":1612464707276,"results":"39","hashOfConfig":"23"},{"size":180,"mtime":1612554605862,"results":"40","hashOfConfig":"23"},{"size":559,"mtime":1612608339522,"results":"41","hashOfConfig":"23"},{"size":233,"mtime":1612607747601,"results":"42","hashOfConfig":"23"},{"size":635,"mtime":1612608368216,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1u5m3n7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\index.js",[],["93","94"],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reportWebVitals.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\App.js",["95"],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\index.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\Nav.js",["96","97","98"],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\PostForm.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\HomePage.js",["99"],"import React from 'react';\r\nimport { increment, user_add } from '../actions/index';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n// import '../cover.css'\r\nfunction HomePage() {\r\n    const counter = useSelector(state => state.counter);\r\n    const dispatch = useDispatch();\r\n    console.log(increment());\r\n    console.log(typeof(increment()));\r\n    return (\r\n        <div>\r\n            <main role=\"main\" className=\"inner cover\">\r\n                <h1 className=\"cover-heading\">Counter Value via redux: {counter}</h1>\r\n                <p className=\"lead\">Cover is a one-page template for building simple and beautiful home pages. Download, edit the text, and add your own fullscreen background photo to make it your own.</p>\r\n                <p className=\"lead\">\r\n                    Some\r\n                    </p>\r\n                <button className=\"btn btn-success\" onClick={() => dispatch(increment())}>Increment Counter</button>\r\n            </main>\r\n\r\n            <footer className=\"mastfoot mt-auto\">\r\n                <div className=\"inner\">\r\n                    <p>Cover template for.</p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default HomePage;","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\Fortnite.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\FortniteItem.js",["100","101"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass FortniteItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            item: {\r\n                item: {\r\n                    images: {}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchItems = async () => {\r\n        const data = await fetch(\r\n            `https://fortnite-api.theapinetwork.com/item/get?id=${this.props.match.params.id}`\r\n        );\r\n\r\n        const item = await data.json();\r\n        this.setState({ item: item.data })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchItems()\r\n    }\r\n\r\n    render() {\r\n        const item = this.state.item;\r\n        const imgStyle = {\r\n            'width': '18rem',\r\n\r\n        }\r\n        const divStyle = {\r\n            'top': '40px',\r\n\r\n        }\r\n        // console.log(items);\r\n        return (\r\n            <div className=\"col d-flex justify-content-center\" style={divStyle}>\r\n                <div className=\"card\" style={imgStyle}>\r\n                    <img className=\"card-img-top\" src={item.item.images.icon} alt=\"Card image cap\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.item.name}</h5>\r\n                        <p className=\"card-text\">{item.item.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FortniteItem;","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\counter.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\islogged.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\PostList.js",["102","103"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './style.css'\r\n\r\nclass PostList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts: [],\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // axios.get('http://localhost:5000/contacts')\r\n        //     .then(response => {\r\n        //         console.log(response)\r\n        //         this.setState({ posts: response.data })\r\n        //     })\r\n        //     .catch(error => {\r\n        //         console.log(error)\r\n        //         this.setState({errMsg: \"error getting the data\"})\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        const contactLists = this.props.data\r\n        const errMsg = this.props.errMsg\r\n        console.log(contactLists)\r\n        const className = this.props.className ? 'primary': ''\r\n        const inlineStyle = {\r\n            fontSize: '40px',\r\n            color: 'red'\r\n        }\r\n\r\n        return (\r\n            // <div className={`${className} font-xl`}>\r\n            <div className=\"col-md-3\">\r\n                <ol className=\"list-group list-group-flush\">\r\n                {\r\n                    contactLists.length ?\r\n                    contactLists.map(post => <li className=\"list-group-item\" key={post._id}> {post.name} - {post.phone_number} </li>) :\r\n                    null\r\n                }\r\n                </ol>\r\n                { errMsg ? <div style={inlineStyle}>{errMsg}</div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostList\r\n","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\actions\\index.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\PostFormF.js",["104"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport PostList from './PostList';\r\n\r\n\r\nfunction PostFormF() {\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        phone_number: '',\r\n        address: '',\r\n        responseData: [],\r\n        errMsg: ''\r\n    });\r\n\r\n    const [count, setCount] = useState(0);\r\n\r\n    var changeHandler = e => {\r\n        console.log(contact);\r\n        console.log([e.target.name])\r\n        // this.setState({ [e.target.name]: e.target.value })\r\n        setContact({ ...contact, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    var submitHandler = e => {\r\n        setCount(count + 1)\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        // axios.post('https://jsonplaceholder.typicode.com/posts', this.state)\r\n        axios.post('http://localhost:5000/contacts/add', contact)\r\n            .then(response => {\r\n                console.log(response)\r\n                getData()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    const getData = () => {\r\n        console.log(\"*******************getting the data\")\r\n        axios.get('http://localhost:5000/contacts')\r\n            .then(response => {\r\n                console.log(response)\r\n                setContact({ ...contact,  responseData: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setContact({ ...contact, errMsg: \"error getting the data\" })\r\n            })\r\n    }\r\n\r\n    // second param in useeffect restrict it from calling this method again and again, as it checks the param with its previous value to see if it is updated then only it executes the useeffect method. ******* if like class component this needs to be called only once like componentdidmount then just pass an empty array\r\n    // useEffect(() => {\r\n    //     getData()\r\n    //     console.log(\"use effect called\")\r\n    // }, [count])\r\n    useEffect(() => {\r\n        getData()\r\n        console.log(\"use effect called\")\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"col-md-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    {/* <input type=\"text\" ref={this.inputRef} className=\"form-control\" name=\"name\" value={name} onChange={this.changeHandler} /> */}\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={contact.name} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <label className=\"form-label\">Phone Number</label>\r\n                    <input type=\"text\" name=\"phone_number\" className=\"form-control\" value={contact.phone_number} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <label className=\"form-label\">Address</label>\r\n                    <input type=\"text\" name=\"address\" className=\"form-control\" value={contact.address} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"col-md-3\" >\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add Contact</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div className=\"card\">\r\n            <PostList data={contact.responseData} errMsg={contact.errMsg} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PostFormF\r\n","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\users.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\FormValidations.js",["105","106","107","108","109"],"import React, {useState, useEffect, lazy, Suspense} from \"react\";\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {increment, userAction} from '../actions/index'\r\n// import LazyComponent from \"./LazyComponent\";\r\n\r\nconst LazyComponent = lazy(() => import('./LazyComponent'))\r\n\r\nfunction FormValidations(){\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    })\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const redux_user = useSelector(state => state.users)\r\n\r\n    var changeHandler = e => {\r\n        // console.log(e.target.name, e.target.value);\r\n        setUser({...user, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    var submitHandler = e => {\r\n        e.preventDefault();\r\n        // setUsers([...users, user])\r\n        dispatch(userAction(user))\r\n        console.log(\"dispatch done\");\r\n        console.log(redux_user);\r\n        setUser({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Suspense fallback={<div>Loading ....... </div>}>\r\n                <LazyComponent/>\r\n            </Suspense>\r\n        <div className=\"card\">\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"col-md-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    {/* <input type=\"text\" ref={this.inputRef} className=\"form-control\" name=\"name\" value={name} onChange={this.changeHandler} /> */}\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={user.name} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <label className=\"form-label\">Phone Number</label>\r\n                    <input type=\"text\" name=\"phone\" className=\"form-control\" value={user.phone} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <label className=\"form-label\">Email</label>\r\n                    <input type=\"text\" name=\"email\" className=\"form-control\" value={user.email} onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"col-md-3\" >\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add Contact</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div className=\"card\">\r\n        <div className=\"col-md-3\">\r\n                <ol className=\"list-group list-group-flush\">\r\n                {\r\n                    redux_user.length ?\r\n                    redux_user.map(people => <li className=\"list-group-item\" key={people.phone}> {people.name} - {people.email} </li>) :\r\n                    null\r\n                }\r\n                </ol>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormValidations;","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\reducers\\formdata.js",["110"],"const intiState = {\r\n    name: '',\r\n    phone_number: '',\r\n    address: '',\r\n    responseData: [],\r\n    errMsg: ''\r\n}\r\n\r\nconst formReducer = (state=intiState, action) => {\r\n    switch(action.type){\r\n        case \"CONTACT_ADD\":\r\n            return { ...state, [\"responseData\"]: action.data};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default formReducer;","D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\LazyComponent.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\Hero.js",[],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\CheckHero.js",["111"],"D:\\workspace\\programming\\react\\mern_app\\frontend\\src\\components\\ErrorBoundary.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"121","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"116","severity":1,"message":"122","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":12},{"ruleId":"116","severity":1,"message":"123","line":2,"column":21,"nodeType":"118","messageId":"119","endLine":2,"endColumn":29},{"ruleId":"116","severity":1,"message":"124","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":44,"column":21,"nodeType":"127","endLine":44,"endColumn":102},{"ruleId":"116","severity":1,"message":"128","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"129","line":31,"column":15,"nodeType":"118","messageId":"119","endLine":31,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":61,"column":8,"nodeType":"132","endLine":61,"endColumn":10,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"134","line":1,"column":26,"nodeType":"118","messageId":"119","endLine":1,"endColumn":35},{"ruleId":"116","severity":1,"message":"128","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"135","line":4,"column":9,"nodeType":"118","messageId":"119","endLine":4,"endColumn":18},{"ruleId":"116","severity":1,"message":"136","line":16,"column":12,"nodeType":"118","messageId":"119","endLine":16,"endColumn":17},{"ruleId":"116","severity":1,"message":"137","line":16,"column":19,"nodeType":"118","messageId":"119","endLine":16,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":12,"column":32,"nodeType":"140","messageId":"141","endLine":12,"endColumn":61,"fix":"142"},{"ruleId":"143","severity":1,"message":"144","line":4,"column":17,"nodeType":"145","messageId":"146","endLine":4,"endColumn":19},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'PostForm' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useSelector' is defined but never used.","'Hero' is defined but never used.","'user_add' is defined but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'axios' is defined but never used.","'className' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'useEffect' is defined but never used.","'increment' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"responseData\"] found.","Property","unnecessarilyComputedProperty",{"range":"150","text":"151"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},[259,275],"\"responseData\"","Update the dependencies array to be: [getData]",{"range":"154","text":"155"},[2081,2083],"[getData]"]